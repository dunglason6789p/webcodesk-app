import template from 'lodash/template';
import { repairPath } from '../../utils/fileUtils';
import { path } from '../../utils/electronUtils';
import { format } from '../../export/utils';
import { checkFileExists } from '../utils';

const templateContent = `
import React from 'react';
import PropTypes from 'prop-types';

const rootStyle: any = {
    width: '250px',
    height: '150px',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
};

/*
  <%= componentName %> component generated by Webcodesk
 */
const <%= componentName %> = () => {
  return (
    <div style={rootStyle}>
      <h3><%= componentName %> component</h3>
    </div>
  );
}

export default <%= componentName %>;
`;

export async function createFiles (componentName, dirName, destDirPath, fileExtension) {
  const fileObjects = [];
  const filePath = repairPath(path().join(destDirPath, dirName, `${componentName}${fileExtension}`));
  const fileExists = await checkFileExists(filePath);
  if (fileExists) {
    throw Error(`The file with the "${componentName}${fileExtension}" name already exists.`);
  }
  let text = template(templateContent)({
    componentName
  });
  fileObjects.push({
    filePath,
    fileData: format(text),
  });
  return fileObjects;
}